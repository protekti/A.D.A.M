def region(image):
    """Applies a region mask to isolate only the current lane."""
    if image is None or image.size == 0:
        return None, None

    h, w = image.shape[:2]

    # Ensure the image has 3 channels
    if len(image.shape) == 2:
        image = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)

    lane_roi = np.array([
        (w // 2 - 1300, h - 375),
        (w // 2 - 250, h - 1000),
        (w // 2 + 300, h - 1000),
        (w - 400, h - 375)
    ], dtype=np.int32)

    mask = np.zeros((h, w), dtype=np.uint8)
    cv2.fillPoly(mask, [lane_roi], 255)

    # Convert mask to a 3-channel image
    mask_rgb = cv2.cvtColor(mask, cv2.COLOR_GRAY2BGR)

    # Ensure both images have the same size
    if mask_rgb.shape != image.shape:
        mask_rgb = cv2.resize(mask_rgb, (image.shape[1], image.shape[0]), interpolation=cv2.INTER_NEAREST)

    masked_image = cv2.bitwise_and(image, mask_rgb)
    
    return masked_image, mask
